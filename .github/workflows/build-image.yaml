name: docker_image

on:
   push:
    branches: [ master, develop ]
    tags: 'v*'
   release:
     types: [published]
   #schedule:
   #   - cron: '0 4 * * *'
      
env:
  REGISTRY: ${{ secrets.IMAGE_REGISTRY }}
  OWNER: ${{ secrets.REPO_USER }}
    
jobs:
  docker:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout Repo
        uses: actions/checkout@v2
      -
        name: Build registry path
        id: get_repo
        run: echo ::set-output name=IMAGE::"$REGISTRY/$OWNER/dataspaceconnector/dataspace-connector"
      -
       name: Find tag
       id: get_tag
       run: echo ::set-output name=TAG::${GITHUB_REF/refs\/tags\//}
      -
       name: Find branch name
       id: get_branch
       run: echo ::set-output name=BRANCH::${GITHUB_REF/refs\/heads\//}
      -
       name: Login to registry
       uses: docker/login-action@v1
       with:
         # This should use REGISTRY instead of the secret directly
         registry: ${{ secrets.IMAGE_REGISTRY }}
         username: ${{ github.actor }}
         password: ${{ secrets.GITHUB_TOKEN }}
      -
       name: Build image
       run: |
        docker build . -t $IMAGE_NAME:$BRANCH_NAME
       env:
         IMAGE_NAME: ${{ steps.get_repo.outputs.IMAGE }}
         BRANCH_NAME: ${{ steps.get_branch.outputs.BRANCH }}
      -
       name: Push image
       run: |
         echo $IMAGE_NAME
         echo $BRANCH_NAME
         echo $TAG_NAME
         TAG=$TAG_NAME
         if [[ $TAG == v* ]]
         then
           # Its a version tag
           TAG=${TAG:1:${#TAG}}
           echo "Found a version tag"
           if [[ $BRANCH_NAME == 'master' ]]
           then
             # Its a release version tag
             docker tag $IMAGE_NAME:$BRANCH_NAME $IMAGE_NAME:latest
             docker push $IMAGE_NAME:latest
           fi
         fi
         if [[ ${#TAG} != 0]]
           # Has tag
           docker tag $IMAGE_NAME:$BRANCH_NAME $IMAGE_NAME:$TAG
           docker push $IMAGE_NAME:$TAG
         fi
         docker push $IMAGE_NAME:$BRANCH_NAME
       env:
         IMAGE_NAME: ${{ steps.get_repo.outputs.IMAGE }}
         BRANCH_NAME: ${{ steps.get_branch.outputs.BRANCH }}
         TAG_NAME: ${{ steps.get_tag.outputs.TAG }}
